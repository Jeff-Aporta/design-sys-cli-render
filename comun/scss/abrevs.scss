@use "./coleccion1" as *;
@use "./fx" as *;
@use "./colors" as *;

body,
html {
  margin: 0;
  padding: 0;
  & > * {
    text-wrap: balance;
  }
}

@each $value in (flex, none, block, inline-block) {
  .d-#{$value} {
    display: $value;
  }
}

.d-flex-column {
  display: flex;
  flex-direction: column;
}

.d-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-1 {
  flex: 1;
}

@each $value in (row, column) {
  .flex-#{$value} {
    flex-direction: $value;
  }
}

@each $abrev,
  $value
    in (
      start: start,
      end: end,
      e: end,
      center: center,
      c: center,
      space-between: space-between,
      sb: space-between,
      se: space-evenly
    )
{
  .jc-#{$abrev} {
    justify-content: $value;
  }
}

.fw-wrap {
  flex-wrap: wrap;
}

@each $abrev,
  $value
    in (c: center, center: center, s: start, end: end, e: end, stretch: stretch)
{
  .ai-#{$abrev} {
    align-items: $value;
  }
}

@each $abrev, $value in (l: center, c: start, r: end) {
  .ta-#{$abrev} {
    text-align: $value;
  }
}

@for $i from 1 through 20 {
  $val: 5 * $i;
  $valpx: $val + px;

  .gap-#{$val}px {
    @extend .d-flex;
    gap: $valpx;
  }

  .pad-#{$val}px {
    padding: $valpx;
  }

  .padh-#{$val}px {
    padding-top: $valpx;
    padding-bottom: $valpx;
  }

  .padw-#{$val}px {
    padding-left: $valpx;
    padding-right: $valpx;
  }

  .padt-#{$val}px {
    padding-top: $valpx;
  }

  .padr-#{$val}px {
    padding-right: $valpx;
  }

  .padb-#{$val}px {
    padding-bottom: $valpx;
  }

  .padl-#{$val}px {
    padding-left: $valpx;
  }

  .m-#{$val}px {
    margin: $valpx;
  }

  .mh-#{$val}px {
    margin-top: $valpx;
    margin-bottom: $valpx;
  }

  .mw-#{$val}px {
    margin-left: $valpx;
    margin-right: $valpx;
  }

  .mt-#{$val}px {
    margin-top: $valpx;
  }

  .mr-#{$val}px {
    margin-right: $valpx;
  }

  .mb-#{$val}px {
    margin-bottom: $valpx;
  }

  .ml-#{$val}px {
    margin-left: $valpx;
  }
}

@for $i from 1 through 12 {
  $vhVal: $i * 10; // 10, 20, 30, ..., 120
  $pxVal: $i * 50; // 50, 100, 150, ..., 600

  // Clases que usan vh y vw
  .h-#{$vhVal}vh {
    height: #{$vhVal}dvh;
  }
  .min-h-#{$vhVal}vh {
    min-height: #{$vhVal}dvh;
  }
  .w-#{$vhVal}vw {
    width: #{$vhVal}dvw;
  }
  .min-w-#{$vhVal}vw {
    min-width: #{$vhVal}dvw;
  }

  // Clases que usan px
  .min-h-#{$pxVal}px {
    min-height: #{$pxVal}px;
  }
  .max-h-#{$pxVal}px {
    max-height: #{$pxVal}px;
  }
  .min-w-#{$pxVal}px {
    min-width: #{$pxVal}px;
  }
  .max-w-#{$pxVal}px {
    max-width: #{$pxVal}px;
  }
}

.minside-win {
  width: min(100vw, 100vh);
  height: min(100vw, 100vh);
}

.fullWidth {
  width: 100%;
}

// ---------------------------------------------
// 1. Tipografía
// ---------------------------------------------
@for $i from 1 through 10 {
  // Variables para tamaños de fuente
  $fontSizePx:   ($i * 2) + 8;     // Genera: 10px, 12px, 14px, ... 26px
  $fontSizePct1: $i * 10;          // Genera: 10, 20, 30, ... 100 (porcentaje)
  $fontSizePct2: ($i * 10) + 100;  // Genera: 110, 120, 130, ... 200 (porcentaje)

  .fs-#{$fontSizePx}-px {
    font-size: $fontSizePx * 1px;
  }

  .fs-#{$fontSizePct1}-pct {
    font-size: $fontSizePct1 * 1%;
  }

  .fs-#{$fontSizePct2}-pct {
    font-size: $fontSizePct2 * 1%;
  }
}

// ---------------------------------------------
// 2. Layout (anchuras, z-index, opacidad, bordes y posicionamiento)
// ---------------------------------------------
@for $i from 1 through 10 {
  // Variables para layout
  $widthPct:   $i * 10  * 1%;   // Genera: 10, 20, 30, ... 100 (%)
  $widthVw:    $i * 10 * 1vw;   // Genera: 10, 20, 30, ... 100 (vw)
  $zVal:       $i;        // Genera: 1, 2, 3, ... 10 (z-index)
  $opacityVal: $i * 10;   // Genera: 10, 20, 30, ... 100 (valor de opacidad en %)
  $opacity:    $opacityVal / 100;  // Convierte a: 0.1, 0.2, ... 1.0
  $borderVal:  $i * 5 * 1px;    // Genera: 5, 10, 15, ... 50 (px)

  .w-#{$widthPct}-pct {
    width: $widthPct;
  }

  .w-#{$widthVw}-vw {
    width: $widthVw;
  }

  .z-index-#{$zVal} {
    z-index: $zVal;
  }

  .op-#{$opacityVal} {
    opacity: $opacity;
  }

  .br-#{$borderVal}-px {
    border-radius: $borderVal !important;
  }

  .bottom-#{$borderVal}-px {
    bottom: $borderVal;
  }

  .right-#{$borderVal}-px {
    right: $borderVal;
  }
}

.overflow-scroll {
  overflow-y: scroll;
}

.overflow-hidden {
  overflow: hidden;
}

.sz-1px {
  width: 1px;
  height: 1px;
}

.absolute-expand {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
